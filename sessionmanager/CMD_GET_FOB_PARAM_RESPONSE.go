package sessionmanager

import (
	"encoding/json"
	"fmt"
	"github.com/unknown321/fuse/message"
	"github.com/unknown321/fuse/tppmessage"
	"log/slog"
)

func GetCmdGetFobParamResponse() tppmessage.CmdGetFobParamResponse {
	t := tppmessage.CmdGetFobParamResponse{}
	t.CryptoType = tppmessage.CRYPTO_TYPE_COMPOUND
	t.Msgid = tppmessage.CMD_GET_FOB_PARAM.String()
	t.Result = tppmessage.RESULT_NOERR
	t.Rqid = 0

	// TODO from database, figure out parameters, HARDCODED

	t.Params = []int{ // 184 values
		75,
		-3000,
		-1800,
		-1800,
		-1500,
		-500,
		100,
		200,
		100,
		10,
		3,
		3,
		2,
		1,
		5,
		2,
		3,
		3,
		3,
		2,
		1,
		2,
		-780,
		-1,
		3,
		30,
		50,
		30,
		50,
		50,
		50,
		350,
		-1500,
		-3000,
		-75,
		-30,
		-50,
		-30,
		-50,
		-30,
		700,
		500,
		300,
		-2500,
		-1500,
		300,
		300,
		500,
		200,
		300000,
		-300000,
		300000,
		-300000,
		300000,
		-300000,
		300000,
		-300000,
		300000,
		-300000,
		300000,
		-300000,
		300000,
		-300000,
		300000,
		-300000,
		1000,
		20,
		3,
		6,
		6,
		15,
		30,
		30,
		150,
		150,
		252,
		50,
		252,
		500,
		-50,
		300,
		100,
		-30,
		-10,
		-100,
		10,
		50,
		30,
		10,
		50,
		-50,
		-500,
		5,
		-5,
		60,
		60,
		500,
		-50,
		300,
		-10,
		10,
		-10,
		10,
		-30,
		30,
		-30,
		30,
		-500,
		-60,
		90,
		0,
		-40,
		120,
		-20,
		60,
		60,
		-60,
		600,
		1080,
		1320,
		1440,
		1560,
		1680,
		1800,
		1920,
		0,
		16,
		25,
		32,
		40,
		48,
		52,
		60,
		100000,
		1000,
		100000,
		50,
		100,
		500,
		800,
		7,
		30,
		560,
		560,
		560,
		560,
		560,
		560,
		560,
		560,
		560,
		560,
		560,
		3200,
		3000,
		2800,
		2600,
		2400,
		2200,
		1800,
		1000,
		1500,
		1000,
		1000,
		1500,
		1000,
		1000,
		1000,
		500,
		100,
		200,
		100,
		100,
		100,
		100,
		200,
		400,
		600,
		800,
		1000,
		1100,
		1200,
		1300,
		1500,
	}

	return t
}

func HandleCmdGetFobParamResponse(message *message.Message, override bool) error {
	if !override {
		return nil
	}

	slog.Info("using overridden version")
	var err error
	t := GetCmdGetFobParamResponse()

	message.MData, err = json.Marshal(t)
	if err != nil {
		return fmt.Errorf("cannot marshal: %w", err)
	}

	return nil
}
